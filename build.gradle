plugins {
    id 'java-library'
    id 'checkstyle'
    id 'eclipse'
    id 'maven'
    id 'maven-publish'
    id 'biz.aQute.bnd.builder'
    id 'net.saliman.properties' version '1.4.6'
    id 'net.researchgate.release' version '2.6.0'
    id 'com.jfrog.bintray' version '1.8.5'
}

repositories {
    jcenter()
    mavenLocal()
}

wrapper {
	gradleVersion = "6.5.1"
}

ext {
	jodaMoneyVersion = '0.12'
	kbVersion = '0.22.10'
	slf4jVersion = '1.7.25'
	kbEmailNotifVersion = '0.6.2-SNAPSHOT'
}

checkstyle {
   toolVersion '8.32'
}

archivesBaseName = 'sn-killbill-invoice-formatter'
group = 'net.solarnetwork.billing'
description = 'SolarNetwork Kill Bill Invoice Formatter'

configurations.all {
    resolutionStrategy { 
        force "org.kill-bill.billing:killbill-internal-api:${kbVersion}"
        force "org.kill-bill.billing:killbill-invoice:${kbVersion}"
        force "org.kill-bill.billing:killbill-util:${kbVersion}"
    }
}

configurations {
	embed
	embed.transitive = false
}

dependencies {
	embed "org.joda:joda-money:${jodaMoneyVersion}"

	compileOnly "org.slf4j:slf4j-api:${slf4jVersion}"
	compileOnly "org.kill-bill.billing:killbill-internal-api:${kbVersion}"
	compileOnly "org.kill-bill.billing:killbill-invoice:${kbVersion}"
	compileOnly "org.kill-bill.billing:killbill-util:${kbVersion}"	
	compileOnly "org.kill-bill.billing.plugin.java:killbill-email-notifications-plugin:${kbEmailNotifVersion}"

    // Testing
	testCompile "org.slf4j:slf4j-api:${slf4jVersion}"
	testCompile "org.kill-bill.billing:killbill-internal-api:${kbVersion}"
	testCompile "org.kill-bill.billing:killbill-invoice:${kbVersion}"
	testCompile "org.kill-bill.billing:killbill-util:${kbVersion}"
	testCompile "org.kill-bill.billing.plugin.java:killbill-email-notifications-plugin:${kbEmailNotifVersion}"

    testCompile "ch.qos.logback:logback-classic:1.1.11"
    testCompile "org.mockito:mockito-core:1.10.19"
    testCompile "org.hamcrest:hamcrest-library:1.3"
    testCompile "junit:junit:4.12";

    testRuntime "org.slf4j:jcl-over-slf4j:${slf4jVersion}"
    testRuntime "org.slf4j:jul-to-slf4j:${slf4jVersion}"
    testRuntime "org.slf4j:log4j-over-slf4j:${slf4jVersion}"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

eclipse {
	project {
		natures "net.sf.eclipsecs.core.CheckstyleNature"
		buildCommand "net.sf.eclipsecs.core.CheckstyleBuilder"
	}
}

java {
    withJavadocJar()
    withSourcesJar()
}

jar {
    version =  version
    manifest {
        attributes "Implementation-Title": "SolarNetwork Kill Bill Invoice Formatter",
                   "Implementation-Version": version
    }
}

task copyToLib(type: Copy) {
    from configurations.embed
    into "$buildDir/embed"
}

compileJava.dependsOn = [copyToLib]

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "SolarNetwork"
            name "SolarNetwork"
            email "code@solarnetwork.net"
        }
    }   
    scm {
       url "https://github.com/SolarNetwork/killbill-invoice-formatter.git"
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'SolarNetwork Kill Bill Invoice Formatter')
                root.appendNode('name', 'killbill-invoice-formatter')
                root.appendNode('url', 'https://github.com/SolarNetwork/killbill-invoice-formatter')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = bintray_user
    key = bintray_key
    publications = ['MyPublication']
    publish = true
    configurations = ['archives']
    pkg {
        repo = 'SolarNetwork'
        name = 'killbill-invoice-formatter'
        userOrg = 'solarnetwork'
        licenses = ['Apache-2.0']
        websiteUrl = 'https://github.com/SolarNetwork/killbill-invoice-formatter'
        issueTrackerUrl = 'https://github.com/SolarNetwork/killbill-invoice-formatter/issues'
        vcsUrl = 'https://github.com/SolarNetwork/killbill-invoice-formatter.git'
        version {
            name = project.version
            desc = project.description
            released  = new Date()
            vcsTag = project.version
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
            gpg {
                sign = true
                passphrase = bintray_gpg_passphrase
            }
        }
    }
}

afterReleaseBuild.dependsOn bintrayUpload
